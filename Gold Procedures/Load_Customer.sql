CREATE OR REPLACE PROCEDURE GRIZZLY_DB.GOLD.ETL_LOAD_DIM_CUSTOMER()
RETURNS VARCHAR
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN
  --Stage latest, unique records from Silver.CUSTOMERS
  CREATE OR REPLACE TEMP TABLE STG_CUSTOMER_LATEST AS
  SELECT
      UPPER(TRIM(CUSTOMER_ID))       AS CUSTOMER_KEY,
      CAST(CURRENT_AGE AS FLOAT)     AS CURRENT_AGE,
      CAST(RETIREMENT_AGE AS FLOAT)  AS RETIREMENT_AGE,
      CAST(BIRTH_YEAR AS FLOAT)      AS BIRTH_YEAR,
      CAST(BIRTH_MONTH AS FLOAT)     AS BIRTH_MONTH,
      INITCAP(TRIM(GENDER))          AS GENDER,
      INITCAP(TRIM(ADDRESS))         AS ADDRESS,
      CAST(LATITUDE AS FLOAT)        AS LATITUDE,
      CAST(LONGITUDE AS FLOAT)       AS LONGITUDE,
      CAST(PER_CAPITA_INCOME AS FLOAT) AS PER_CAPITA_INCOME,
      CAST(YEARLY_INCOME AS FLOAT)     AS YEARLY_INCOME,
      CAST(TOTAL_DEBT AS FLOAT)        AS TOTAL_DEBT,
      CAST(CREDIT_SCORE AS FLOAT)      AS CREDIT_SCORE,
      CAST(NUM_CREDIT_CARDS AS FLOAT)  AS NUM_CREDIT_CARDS,
      CURRENT_TIMESTAMP() AS SRC_LOAD_TS
  FROM GRIZZLY_DB.SILVER.CUSTOMERS
  WHERE CUSTOMER_ID IS NOT NULL;

  --Merge into Gold DIM_CUSTOMER (Type-1 upsert only)

  MERGE INTO GRIZZLY_DB.GOLD.DIM_CUSTOMER d
  USING STG_CUSTOMER_LATEST s
     ON d.CUSTOMER_KEY = s.CUSTOMER_KEY
  WHEN MATCHED THEN UPDATE SET
       d.CURRENT_AGE       = s.CURRENT_AGE,
       d.RETIREMENT_AGE    = s.RETIREMENT_AGE,
       d.BIRTH_YEAR        = s.BIRTH_YEAR,
       d.BIRTH_MONTH       = s.BIRTH_MONTH,
       d.GENDER            = s.GENDER,
       d.ADDRESS           = s.ADDRESS,
       d.LATITUDE          = s.LATITUDE,
       d.LONGITUDE         = s.LONGITUDE,
       d.PER_CAPITA_INCOME = s.PER_CAPITA_INCOME,
       d.YEARLY_INCOME     = s.YEARLY_INCOME,
       d.TOTAL_DEBT        = s.TOTAL_DEBT,
       d.CREDIT_SCORE      = s.CREDIT_SCORE,
       d.NUM_CREDIT_CARDS  = s.NUM_CREDIT_CARDS,
       d.LOAD_TS           = CURRENT_TIMESTAMP()
  WHEN NOT MATCHED THEN INSERT (
       CUSTOMER_KEY, CURRENT_AGE, RETIREMENT_AGE, BIRTH_YEAR, BIRTH_MONTH,
       GENDER, ADDRESS, LATITUDE, LONGITUDE,
       PER_CAPITA_INCOME, YEARLY_INCOME, TOTAL_DEBT,
       CREDIT_SCORE, NUM_CREDIT_CARDS, LOAD_TS
  ) VALUES (
       s.CUSTOMER_KEY, s.CURRENT_AGE, s.RETIREMENT_AGE, s.BIRTH_YEAR, s.BIRTH_MONTH,
       s.GENDER, s.ADDRESS, s.LATITUDE, s.LONGITUDE,
       s.PER_CAPITA_INCOME, s.YEARLY_INCOME, s.TOTAL_DEBT,
       s.CREDIT_SCORE, s.NUM_CREDIT_CARDS, CURRENT_TIMESTAMP()
  );

  RETURN ''DIM_CUSTOMER Type-1 upsert completed'';
END;
';