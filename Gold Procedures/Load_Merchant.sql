CREATE OR REPLACE PROCEDURE GRIZZLY_DB.GOLD.ETL_LOAD_DIM_MERCHANT()
RETURNS VARCHAR
LANGUAGE SQL
EXECUTE AS OWNER
AS '
BEGIN

  -- Stage latest, unique records from Silver.MERCHANTS

  CREATE OR REPLACE TEMP TABLE STG_MERCHANT_LATEST AS
  SELECT
      UPPER(TRIM(MERCHANT_ID))       AS MERCHANT_ID,
      INITCAP(TRIM(MERCHANT_NAME))   AS MERCHANT_NAME,
      INITCAP(TRIM(MERCHANT_CITY))   AS MERCHANT_CITY,
      UPPER(TRIM(MERCHANT_STATE))    AS MERCHANT_STATE,
      LPAD(TRIM(ZIP), 5, ''0'')        AS ZIP,
      CAST(MCC AS FLOAT)             AS MCC,
      INITCAP(TRIM(MCC_DESCRIPTION)) AS MCC_DESCRIPTION,
      CURRENT_TIMESTAMP() AS SRC_LOAD_TS
  FROM GRIZZLY_DB.SILVER.MERCHANTS
  WHERE MERCHANT_ID IS NOT NULL;

  --Merge into Gold DIM_MERCHANT (Type-1 SCD)

  MERGE INTO GRIZZLY_DB.GOLD.DIM_MERCHANT d
  USING STG_MERCHANT_LATEST s
     ON d.MERCHANT_ID = s.MERCHANT_ID
  WHEN MATCHED THEN UPDATE SET
       d.MERCHANT_NAME      = s.MERCHANT_NAME,
       d.MERCHANT_CITY      = s.MERCHANT_CITY,
       d.MERCHANT_STATE     = s.MERCHANT_STATE,
       d.ZIP                = s.ZIP,
       d.MCC                = s.MCC,
       d.MCC_DESCRIPTION    = s.MCC_DESCRIPTION,
       d.LOAD_TS            = CURRENT_TIMESTAMP()
  WHEN NOT MATCHED THEN INSERT (
       MERCHANT_ID, MERCHANT_NAME, MERCHANT_CITY, MERCHANT_STATE,
       ZIP, MCC, MCC_DESCRIPTION, LOAD_TS
  ) VALUES (
       s.MERCHANT_ID, s.MERCHANT_NAME, s.MERCHANT_CITY, s.MERCHANT_STATE,
       s.ZIP, s.MCC, s.MCC_DESCRIPTION, CURRENT_TIMESTAMP()
  );

  RETURN ''DIM_MERCHANT Type-1 upsert completed'';
END;
';